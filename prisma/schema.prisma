// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  firstname String
  surname   String
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Category {
  id              Int               @id @default(autoincrement())
  name            String            @map("name")
  slug            String            @map("slug")
  useInMenu       Boolean           @default(false) @map("use_in_menu")
  createdAt       DateTime          @default(now()) @map("created_at")
  updatedAt       DateTime          @updatedAt @map("updated_at")
  products        Product[]         @relation("CategoryProduct")
  CategoryProduct CategoryProduct[]
}

model Product {
  id                Int               @id @default(autoincrement())
  enabled           Boolean           @default(false)
  name              String            @map("name")
  slug              String            @map("slug")
  useInMenu         Boolean           @default(false) @map("use_in_menu")
  stock             Int               @default(0)
  description       String?           @map("description")
  price             Float             @map("price")
  priceWithDiscount Float             @map("price_with_discount")
  createdAt         DateTime          @default(now()) @map("created_at")
  updatedAt         DateTime          @updatedAt @map("updated_at")
  categories        Category[]        @relation("CategoryProduct")
  images            ProductImage[]
  options           ProductOption[]
  CategoryProduct   CategoryProduct[]
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  productId Int     @map("product_id")
  product   Product @relation(fields: [productId], references: [id])
  enabled   Boolean @default(false)
  path      String  @map("path")
}

model ProductOption {
  id        Int       @id @default(autoincrement())
  productId Int       @map("product_id")
  product   Product   @relation(fields: [productId], references: [id])
  title     String    @map("title")
  shape     Shape     @default(SQUARE)
  radius    Int       @default(0)
  type      InputType @default(TEXT)
  values    String    @map("values")
}

model CategoryProduct {
  productId  Int
  categoryId Int
  product    Product  @relation(fields: [productId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([productId, categoryId])
}

// Enums
enum Shape {
  SQUARE
  CIRCLE
}

enum InputType {
  TEXT
  COLOR
}
